/* Generated By:JavaCC: Do not edit this line. PickleConstants.java */
package vlab.pickle;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PickleConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ALL = 8;
  /** RegularExpression Id. */
  int APPLICATION = 9;
  /** RegularExpression Id. */
  int BOOLEAN = 10;
  /** RegularExpression Id. */
  int BYTE = 11;
  /** RegularExpression Id. */
  int CASCADE = 12;
  /** RegularExpression Id. */
  int CHAR = 13;
  /** RegularExpression Id. */
  int CHECK = 14;
  /** RegularExpression Id. */
  int DATE = 15;
  /** RegularExpression Id. */
  int DATETIME = 16;
  /** RegularExpression Id. */
  int DELETE = 17;
  /** RegularExpression Id. */
  int DOUBLE = 18;
  /** RegularExpression Id. */
  int FLAGS = 19;
  /** RegularExpression Id. */
  int INIT = 20;
  /** RegularExpression Id. */
  int INT = 21;
  /** RegularExpression Id. */
  int KEY = 22;
  /** RegularExpression Id. */
  int LINK = 23;
  /** RegularExpression Id. */
  int LONG = 24;
  /** RegularExpression Id. */
  int MONEY = 25;
  /** RegularExpression Id. */
  int NOT = 26;
  /** RegularExpression Id. */
  int NODOMAIN = 27;
  /** RegularExpression Id. */
  int NULL = 28;
  /** RegularExpression Id. */
  int OPTIONS = 29;
  /** RegularExpression Id. */
  int ORDER = 30;
  /** RegularExpression Id. */
  int OTHER = 31;
  /** RegularExpression Id. */
  int OUTPUT = 32;
  /** RegularExpression Id. */
  int PASSWORD = 33;
  /** RegularExpression Id. */
  int PRIMARY = 34;
  /** RegularExpression Id. */
  int REGISTRY = 35;
  /** RegularExpression Id. */
  int RELATION = 36;
  /** RegularExpression Id. */
  int SEQUENCE = 37;
  /** RegularExpression Id. */
  int SERVER = 38;
  /** RegularExpression Id. */
  int SHORT = 39;
  /** RegularExpression Id. */
  int SHOW = 40;
  /** RegularExpression Id. */
  int SIZES = 41;
  /** RegularExpression Id. */
  int SUPPLIED = 42;
  /** RegularExpression Id. */
  int TABLE = 43;
  /** RegularExpression Id. */
  int TIME = 44;
  /** RegularExpression Id. */
  int TIMESTAMP = 45;
  /** RegularExpression Id. */
  int UNIQUE = 46;
  /** RegularExpression Id. */
  int UPPERCASE = 47;
  /** RegularExpression Id. */
  int USE = 48;
  /** RegularExpression Id. */
  int USER = 49;
  /** RegularExpression Id. */
  int USERSTAMP = 50;
  /** RegularExpression Id. */
  int VALIDATE = 51;
  /** RegularExpression Id. */
  int VALUE = 52;
  /** RegularExpression Id. */
  int VERSION = 53;
  /** RegularExpression Id. */
  int VIEWONLY = 54;
  /** RegularExpression Id. */
  int COMMENT = 55;
  /** RegularExpression Id. */
  int ATSIGN = 56;
  /** RegularExpression Id. */
  int COLON = 57;
  /** RegularExpression Id. */
  int LEFTPAREN = 58;
  /** RegularExpression Id. */
  int RIGHTPAREN = 59;
  /** RegularExpression Id. */
  int LEFTBRACE = 60;
  /** RegularExpression Id. */
  int RIGHTBRACE = 61;
  /** RegularExpression Id. */
  int SLASH = 62;
  /** RegularExpression Id. */
  int ASSIGN = 63;
  /** RegularExpression Id. */
  int NUMBER = 64;
  /** RegularExpression Id. */
  int FLOATING = 65;
  /** RegularExpression Id. */
  int EXPONENT = 66;
  /** RegularExpression Id. */
  int STRING = 67;
  /** RegularExpression Id. */
  int DQUOTEDS = 68;
  /** RegularExpression Id. */
  int SQUOTEDS = 69;
  /** RegularExpression Id. */
  int IDENTIFIER = 70;
  /** RegularExpression Id. */
  int LIDENTIFIER = 71;
  /** RegularExpression Id. */
  int LETTER = 72;
  /** RegularExpression Id. */
  int DIGIT = 73;
  /** RegularExpression Id. */
  int CODE = 74;
  /** RegularExpression Id. */
  int ENDCODE = 75;
  /** RegularExpression Id. */
  int CODELINE = 76;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int CODESTATE = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\",\"",
    "<token of kind 6>",
    "<token of kind 7>",
    "\"all\"",
    "\"application\"",
    "\"boolean\"",
    "<BYTE>",
    "\"cascade\"",
    "<CHAR>",
    "\"check\"",
    "\"date\"",
    "\"datetime\"",
    "\"delete\"",
    "<DOUBLE>",
    "\"flags\"",
    "\"__init__\"",
    "<INT>",
    "\"key\"",
    "\"link\"",
    "\"long\"",
    "\"money\"",
    "\"not\"",
    "\"nodomain\"",
    "\"null\"",
    "\"options\"",
    "<ORDER>",
    "\"other\"",
    "\"output\"",
    "\"password\"",
    "\"primary\"",
    "\"registry\"",
    "\"relation\"",
    "\"sequence\"",
    "\"server\"",
    "<SHORT>",
    "\"show\"",
    "\"sizes\"",
    "\"supplied\"",
    "\"table\"",
    "\"time\"",
    "\"timestamp\"",
    "\"unique\"",
    "<UPPERCASE>",
    "\"use\"",
    "\"user\"",
    "\"userstamp\"",
    "\"validate\"",
    "\"value\"",
    "\"version\"",
    "\"viewonly\"",
    "<COMMENT>",
    "\"@\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"/\"",
    "\"=\"",
    "<NUMBER>",
    "<FLOATING>",
    "<EXPONENT>",
    "<STRING>",
    "<DQUOTEDS>",
    "<SQUOTEDS>",
    "<IDENTIFIER>",
    "<LIDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<CODE>",
    "<ENDCODE>",
    "<CODELINE>",
  };

}
